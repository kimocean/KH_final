<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.mapper.ProductMapper">
<select id="productSelectAll" resultType="com.meaningfarm.mall.product.ProductVO">
	select * from product, category_type, category_local
	where product.category_type_no = category_type.category_type_no
	and product.category_local_no = category_local.category_local_no
	order by product_no asc
</select>
<select id="productSelectOne" parameterType="int" resultType="com.meaningfarm.mall.product.ProductVO">
	select product_no, product_name, product_price, product_detail,
		   product_stock, product_dlvyfee, product_dlvylimit, category_local_no, category_type_no, m_id
	from product
	where product_no = #{product_no}
</select>
<insert id="productInsert">
	<selectKey resultType="int" keyProperty="product_no" order="BEFORE">
		select SEQ_PRODUCT_NO.nextval from dual
	</selectKey>
	insert into product(product_no, product_name, product_price, product_detail, product_stock,
						product_dlvyfee, product_dlvylimit, category_local_no, category_type_no, m_id)
	values(#{product_no}, #{product_name}, #{product_price}, #{product_detail}, #{product_stock},
		   #{product_dlvyfee}, #{product_dlvylimit}, #{category_local_no}, #{category_type_no}, #{m_id})
</insert>
<update id="productUpdate" parameterType="com.meaningfarm.mall.product.ProductVO">
	update product
	   set product_name = #{product_name}
		 , product_price = #{product_price}
		 , product_detail = #{product_detail}
		 , product_stock = #{product_stock}
		 , product_dlvyfee = #{product_dlvyfee}
		 , product_dlvylimit = #{product_dlvylimit}
		 , category_local_no = #{category_local_no}
		 , category_type_no = #{category_type_no}
		 , m_id = #{m_id}
	 where product_no = #{product_no}
</update>
<delete id="productDelete" parameterType="int">
	delete from product
	where product_no = #{product_no}
</delete>


<!-- productfile -->
<select id="productfileList" parameterType="int" resultType="com.meaningfarm.mall.product.ProductFileVO">
	select * from productfile2
	where product_no = #{product_no}
</select>
<insert id="productfileInsert" parameterType="com.meaningfarm.mall.product.ProductFileVO">
	insert into productfile2
	values(seq_productfile_no.nextval, #{productfile_name}, #{productfile_sname}, #{productfile_path}, #{product_no})
</insert>
<delete id="productfileDelete" parameterType="int">
	delete from productfile2
	where product_no = #{product_no}
</delete>
<delete id="productfileDeleteOne" parameterType="int">
	delete from productfile2
	where productfile_no = #{productfile_no}
</delete>


<select id="getListPaging" resultType="com.meaningfarm.mall.product.ProductVO">
	<![CDATA[
		select rn, product_no, category_type_name, category_local_name, product_name, product_price, product_dlvyfee
		  from (
		  		select /*+INDEX_DESC(product PK_PRODUCT) */ rownum as rn, product_no, category_type_no,
		  			   category_local_no, product_name, product_price, product_dlvyfee, m_id
    			  from product where rownum <= #{pageNum} * #{amount}) product, category_type, category_local
         where rn > (#{pageNum} -1) * #{amount}
		   and product.category_type_no = category_type.category_type_no
		   and product.category_local_no = category_local.category_local_no
		]]>
</select>


<select id="countProduct" resultType="int">
	select count(*) from product
	where m_id = #{m_id}
	<trim>
		<if test="product_name=='product_name' and keyword != null and keyword != '' ">
			product_name like CONCAT('%', #{keyword}, '%')
		</if>
	</trim>
</select>
<select id="selectProductPage" resultType="com.meaningfarm.mall.product.ProductVO">
	select *
	from (
			select rownum rn, A.*
			from (
					select * from product
					where m_id = #{m_id}
					order by product_no desc
			) A
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="product_name=='product_name' and keyword != null and keyword != '' ">
				AND product_name like CONCAT('%', #{keyword}, '%')
			</if>
		</trim>
		)
	where rn between #{start} and #{end}
</select>
</mapper>